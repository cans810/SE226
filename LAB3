#include <iostream>

using namespace std;

class Node{
    public:
        int data;
        Node* next;
};

class Stack{
    private:
        Node *head;
        int size2;
        int max_size;

    public:
        Stack(int n){
            head = nullptr;
            size2 = 0;
            max_size = n;
        }

        void push(int x){
            if(size2 + 1 > max_size){
                cout << "Stack overflow" << endl;
            } else{
                Node *temp = new Node();
                (*temp).data = x;
                (*temp).next = head;
                head = temp;
                size2++;
            }
        }

        int top(){
            return head->data;
        }

        int pop(){
            int topData = top();
            head = head->next;
            size2--;
            return topData;
        }

        bool isEmpty(){
            if(size2==0){
                return true;
            }
            return false;
        }

        int size(){
            return size2;
        }

        void print(){
            for(Node *n=head; n!=nullptr; n=n->next){
                cout << n->data << endl;
            }
        }
};

int main() {
    Stack *stack = new Stack(1);
    (*stack).push(1);
    cout << (*stack).size() << endl;
    (*stack).push(2);
    cout << (*stack).size() << endl;

    (*stack).print();
    cout << (*stack).size() << endl;
    cout << (*stack).isEmpty() << endl;
    (*stack).pop();
    (*stack).print();


    return 0;
}
